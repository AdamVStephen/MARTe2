$Test_MathExpressionAM_1 = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }                
                Time = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }            
            }
        }
        +MathGAM = {
        
            Class = MathExpressionGAM
            
            Expression = "
//                          ret1 = Sig1 + Sig2 + g;
//                          ret2 = ret1 + h0 + pow(v0,2)/(2*g);
                            ret1 = Sig1 + Sig2;
                            ret2 = ret1 + 0.8 + pow(5,2)/(2*9.81);
                            ret3 = ret1 + Sig1/Sig2 + 9.81;
                         "
            //#define g   9.81
            //#define v0  5.0
            //#define h0  0.8
            InputSignals = {
                Sig1 = {
                    Type = float64
                    DataSource = DDB1
                    NumberOfElements = 1
                }
                Sig2 = {
                    Type = float64
                    DataSource = DDB1
                    NumberOfElements = 1
                }
            }+
            OutputSignals = {
                ret1 = {
                    Type = float64
                    DataSource = LoggerDataSource
                    NumberOfElements = 1
                }
                ret2 = {
                    Type = float64
                    DataSource = LoggerDataSource
                    NumberOfElements = 1
                }
                ret3 = {
                    Type = float64
                    DataSource = LoggerDataSource
                    NumberOfElements = 1
                }
            }
        }
        +ConstGAM = {
            Class = ConstantGAM
            OutputSignals = {
                Sig1 = {
                    Default = 100
                    DataSource = DDB1
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 0
                }
                Sig2 = {
                    Default = 20
                    DataSource = DDB1
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 0
                } 
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread CPUs = 0x1 Functions = {GAMTimer ConstGAM MathGAM}
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
