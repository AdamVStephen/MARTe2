#User defs
#this is the path of your stm cube folder
MARTE_TARGET=freertos-armv7m
MAINDIR=/home/pc/STM32Cube_FW_F4_V1.5.0/
BUILDPATH=../../../Build/$(MARTE_TARGET)/GTest/
MARTEDIR=../../../


#include CPPFILES objs declared in baselib


RTOSDIR=$(MAINDIR)Middlewares/Third_Party/FreeRTOS/Source/
CROSSPATH?=/usr/bin/
CROSSPFX=$(CROSSPATH)arm-none-eabi-
CC=$(CROSSPFX)gcc
CXX=$(CROSSPFX)g++
OBJCOPY=$(CROSSPFX)objcopy
OBJDUMP=$(CROSSPFX)objdump
AS=$(CROSSPFX)as
LD=$(CROSSPFX)g++
NM=$(CROSSPFX)nm

FLAGS=-MD -MP -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -mlittle-endian -mthumb -mthumb-interwork -ffunction-sections -fdata-sections  
#-fno-builtin
CFLAGS=$(FLAGS) -Wall
OPTFLAGS=-Os
#Remember to substitute it with stm macros.
SPECFLAGS= -DUSE_USB_FS -DSTM32F407xx -DUSE_FREERTOS -DINCLUDE_eTaskGetState=1 -DINCLUDE_pcTaskGetTaskName=1 -DUSE_THREADS_DATABASE

TARGET=MainGTest_$(MARTE_TARGET)


LIBS=$(MARTEDIR)Build/freertos-armv7m/GTest/MainGTest_$(MARTE_TARGET).a
#include the stm headers
INCPATHS+= -I../
INCPATHS+= -I./Inc
INCPATHS+= -I$(MAINDIR)Drivers/CMSIS/Device/ST/STM32F4xx/Include
INCPATHS+= -I$(MAINDIR)Drivers/STM32F4xx_HAL_Driver/Inc/
INCPATHS+= -I$(MAINDIR)Drivers/BSP/STM32F4-Discovery/
INCPATHS+= -I$(MAINDIR)Drivers/CMSIS/Include/
INCPATHS+= -I$(MAINDIR)Middlewares/ST/STM32_USB_Device_Library/Core/Inc/
INCPATHS+= -I$(MAINDIR)Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/
#INCPATHS+= -I$(MAINDIR)Drivers/BSP/Components/lis3dsh/
#INCPATHS+= -I$(MAINDIR)Drivers/BSP/Components/lis302dl/
INCPATHS+= -I$(RTOSDIR)portable/GCC/ARM_CM4F/
INCPATHS+= -I$(RTOSDIR)CMSIS_RTOS/
INCPATHS+= -I$(RTOSDIR)include/
#INCPATHS+= -I/usr/include
#INCPATHS+= -I/usr/include/x86_64-linux-gnu

#include the baselib2 headers
#INCPATHS+= -I$(MARTEDIR)Source/Core/L0Portability/
#INCPATHS+= -I$(MARTEDIR)Source/Core/L1Objects/
#INCPATHS+= -I$(MARTEDIR)Source/Core/Drivers/
#INCPATHS+= -I$(MARTEDIR)Source/Core/Drivers/Platform/STM32F4_Discovery


CFLAGS+= $(INCPATHS) $(OPTFLAGS) -g


#all the source paths
SRC=Src/
HALPATH=$(MAINDIR)Drivers/STM32F4xx_HAL_Driver/Src/
BSPPATH=$(MAINDIR)Drivers/BSP/STM32F4-Discovery/
CMSISPATH=$(MAINDIR)Drivers/CMSIS/Device/ST/STM32F4xx/Source/
PORTABLEPATH=$(RTOSDIR)portable/GCC/ARM_CM4F/
MEMORYMANPATH=$(RTOSDIR)portable/MemMang/
USBPATH=$(MAINDIR)Middlewares/ST/STM32_USB_Device_Library/Core/Src/
USB_CDC_PATH=$(MAINDIR)Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/
#ACCELPATH=$(MAINDIR)Drivers/BSP/Components/lis3dsh/
#ACCELPATH2=$(MAINDIR)Drivers/BSP/Components/lis302dl/


#i must include also the input cpp which contain the main.


CFILES:=$(shell ls $(SRC)*.c 2>/dev/null)
CFILES+=$(shell ls $(HALPATH)*.c 2>/dev/null)
CFILES+=$(shell ls $(BSPPATH)*.c 2>/dev/null)
CFILES+=$(shell ls $(CMSISPATH)*.c 2>/dev/null)
CFILES+=$(shell ls $(RTOSDIR)*.c 2>/dev/null)
CFILES+=$(shell ls $(RTOSDIR)CMSIS_RTOS/*.c 2>/dev/null)
CFILES+=$(shell ls $(PORTABLEPATH)*.c 2>/dev/null)
CFILES+=$(shell ls $(MEMORYMANPATH)heap_3.c 2>/dev/null)
CFILES+=$(shell ls $(USBPATH)*.c 2>/dev/null)
CFILES+=$(shell ls $(USB_CDC_PATH)*.c 2>/dev/null)
#CFILES+=$(shell ls $(ACCELPATH)*.c 2>/dev/null)
#CFILES+=$(shell ls $(ACCELPATH2)*.c 2>/dev/null)

CPPFILES+= $(shell ls *.cpp 2>/dev/null)

#startup.s should be in this directory
AFILES:=$(shell ls $(SRC)*.s 2>/dev/null)
#AFILES+=$(shell ls $(HALPATH)*.s 2>/dev/null)
#AFILES+=$(shell ls $(BSPPATH)*.s 2>/dev/null)
#AFILES+=$(shell ls $(CMSISPATH)*.s 2>/dev/null)
COBJS:=$(CFILES:%.c=%.o)

CPPOBJS = $(CPPFILES:%.cpp=%.o) 
CPPOBJS += $(shell find  ../../../Build/$(MARTE_TARGET)/ -name "*.o")

AOBJS:=$(AFILES:%.s=%.o)
ALLOBJS=$(CPPOBJS) $(COBJS) $(AOBJS)
#LPATH=$(MAINDIR)Projects/STM32F4-Discovery/Templates/TrueSTUDIO/STM32F4-Discovery/
LPATH=
#LTARGET=$(LPATH)STM32F407VG_FLASH.ld
LTARGET=$(LPATH)stm32_flash.ld
LFLAGS=-Wl,--gc-sections -g
#LIBS+=$(MARTEDIR)Build/freertos-armv7m/Core/L0Portability/L0Portability.a
#LIBS+= $(MARTEDIR)Build/freertos-armv7m/Core/L1Objects/L1Objects.a
#LIBS+= $(MARTEDIR)Build/freertos-armv7m/Core/Drivers/Drivers.a


all: $(BUILDPATH)$(TARGET).bin 
#$(BUILDPATH)$(TARGET).lst $(BUILDPATH)$(TARGET).sym

boh:
	echo $(ALLOBJS)
	echo $(CPPOBJSTMP)

%.o: %.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@ 

$(HALPATH)%.o: $(HALPATH)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(BSPPATH)%.o: $(BSPPATH)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(CMSISPATH)%.o: $(CMSISPATH)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@


$(RTOSDIR)%.o: $(RTOSDIR)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(RTOSDIR)CMSIS_RTOS/%.o: $(RTOSDIR)CMSIS_RTOS/%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(PORTABLEPATH)%.o: $(PORTABLEPATH)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(MEMORYMANPATH)%.o: $(MEMORYMANPATH)%.c
	$(CC) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

%.o: %.cpp
	$(CXX) $(CFLAGS) $(SPECFLAGS) -c $< -o $@

$(BUILDPATH)%.o: %.s
	$(CC) $(CFLAGS) -c $*.s -o $(BUILDPATH)$*.o

$(BUILDPATH)$(TARGET).elf: $(ALLOBJS) $(LTARGET)
	$(LD) $(FLAGS) -T $(LTARGET) $(LFLAGS) $(ALLOBJS) --specs=nosys.specs -o $@ 

$(BUILDPATH)%.bin: $(BUILDPATH)%.elf
	$(OBJCOPY) -S -O binary  $< $@

$(BUILDPATH)%.lst: $(BUILDPATH)%.elf
	$(OBJDUMP) -d $^ > $@

$(BUILDPATH)%.sym: $(BUILDPATH)%.elf
	$(NM)  $^ | sort > $@

.PRECIOUS: $(BUILDPATH)%.elf

.PHONY: clean

clean:
	rm -f $(ALLOBJS) $(BUILDPATH)*.bin $(BUILDPATH)*.lst  $(BUILDPATH)*.sym  $(BUILDPATH)*.elf 

