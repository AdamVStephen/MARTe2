#############################################################
#
# Copyright 2011 EFDA | European Fusion Development Agreement
#
# Licensed under the EUPL, Version 1.1 or - as soon they 
# will be approved by the European Commission - subsequent  
# versions of the EUPL (the "Licence"); 
# You may not use this work except in compliance with the 
# Licence. 
# You may obtain a copy of the Licence at: 
#  
# http://ec.europa.eu/idabc/eupl
#
# Unless required by applicable law or agreed to in 
# writing, software distributed under the Licence is 
# distributed on an "AS IS" basis, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
# express or implied. 
# See the Licence for the specific language governing 
# permissions and limitations under the Licence. 
#
# $Id$
#
#############################################################
ctags : %.cpp %.c %.h
	ctags -R

%_Gen.cpp : ../Generic/%_Generic.cpp
	cp ../Generic/$*_Generic.cpp $*_Gen.cpp

$(ROOT_DIR)/createLibrary.o:
	touch createLibrary.cpp

$(BUILD_DIR)/%.o : %.cpp
	mkdir -p $(BUILD_DIR)
	rm -f $(ROOT_DIR)/createLibrary.o	
	$(CCOMPILER) -c $(OPTIM) $(INCLUDES) $(CPPFLAGS) $(CFLAGSPEC) $(DEBUG)  $*.cpp -o $(BUILD_DIR)/$*.o

$(BUILD_DIR)/%.o : %.c
	mkdir -p $(BUILD_DIR)
	$(CCOMPILER) -c $(OPTIM) $(INCLUDES) $(CFLAGS) $(CFLAGSPEC) $(DEBUG)  $*.c -o $(BUILD_DIR)/$*.o

$(BUILD_DIR)/%.a : $(OBJS) $(ROOT_DIR)/createLibrary.o
	touch $@
	rm $(BUILD_DIR)/$*.a
	$(LINKER) -r $(OBJS) $(LIBRARIES_STATIC) -o $@

$(BUILD_DIR)/%.so : $(OBJS) $(ROOT_DIR)/createLibrary.o
	echo "Only static linking supported"

%.ifo :  %.h
	$(COMPILER) -E -I$(CINTSYSDIR)/src  -I$(CINTSYSDIR) $(CFLAGS) $(DEBUG) $(OPTIM)  $*.h > temp/temp.pp
	cint  -i temp/temp.pp $(MAKEDEFAULTDIR)/MakeIfo.cxx $* > $*.ifo

%.sinfo.cpp :  %.h
	$(COMPILER) -D_CINT -E -I$(CINTSYSDIR)/src  -I$(CINTSYSDIR) $(CFLAGS) $(DEBUG) $(OPTIM)  $*.h > temp/temp.pp
	cint   -i  $(MAKEDEFAULTDIR)/MakeIfo.cxx $* > $*.sinfo.cpp

$(BUILD_DIR)/%.def : 
	touch a.out
	objdump -t $(@:%.def=%.a) > $@
	rm a.out

$(BUILD_DIR)/%.exe : $(BUILD_DIR)/%.o 
	touch $(BUILD_DIR)/$*.exe
	echo cannot build executable $(BUILD_DIR)/$*.exe use $(BUILD_DIR)/$*.ex

$(BUILD_DIR)/%.ex : $(BUILD_DIR)/%.o $(OBJS)
	$(COMPILER) $(LFLAGS) $(BUILD_DIR)/$*.o $(OBJS) $(LIBRARIES)  -o $(BUILD_DIR)/$*.ex

$(BUILD_DIR)/%.elf : $(BUILD_DIR)/%.o $(OBJS) 
	$(COMPILER) $(CFLAGS) $(LFLAGS) -T $(LINKER_FILE) $(BUILD_DIR)/$*.o $(OBJS) $(LIBRARIES) --specs=nosys.specs -o $@ 

$(BUILD_DIR)/%.bin : $(BUILD_DIR)/%.elf
	$(OBJCOPY) -S -O binary  $< $@

$(BUILD_DIR)/%.lst : $(BUILD_DIR)/%.elf
	$(OBJDUMP) -d $^ > $@

$(BUILD_DIR)/%.sym : $(BUILD_DIR)/%.elf
	$(NM)  $^ | sort > $@

depends.freertos-armv7m: dependsRaw.freertos-armv7m 
	@echo "/\.o:/s/^/$(subst /,\/,$(BUILD_DIR))\//" > CreateLinuxDepends.sed
	sed -f CreateLinuxDepends.sed dependsRaw.freertos-armv7m >depends.freertos-armv7m
	rm -f CreateLinuxDepends.sed 

dependsRaw.freertos-armv7m: 
	$(COMPILER) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(CFLAGSPEC) $(DEBUG) $(OPTIM) -MM -I. *.c* > dependsRaw.freertos-armv7m
	@mkdir -p temp
	@mkdir -p $(BUILD_DIR)

$(BUILD_DIR)/%.gam : $(BUILD_DIR)/%.o $(OBJS)
	$(COMPILER) $(LFLAGS) -shared -fPIC $(OBJS) $(LIBRARIES) $(BUILD_DIR)/$*.o -o $@

$(BUILD_DIR)/%.drv : $(BUILD_DIR)/%.o $(OBJS)
	$(COMPILER) $(LFLAGS) -shared -fPIC $(OBJS) $(LIBRARIES) $(BUILD_DIR)/$*.o -o $@

%.spb : 
	$(MAKE) -C $* -f Makefile.$(TARGET) 

%.spc : 
	$(MAKE) -C $* -f Makefile.$(TARGET) clean

clean:  $(SUBPROJC)
	@rm -f depends*
	@rm -f $(BUILD_DIR)/*$(OBJEXT)
	@rm -f $(BUILD_DIR)/*$(DLLEXT)
	@rm -f $(BUILD_DIR)/*$(EXEEXT)
	@rm -f $(BUILD_DIR)/*$(LIBEXT)
	@rm -f $(BUILD_DIR)/*$(GAMEXT)
	@rm -f $(BUILD_DIR)/*$(DRVEXT)
	@rm -f $(BUILD_DIR)/*$(ASMEXT)
	@rm -f $(BUILD_DIR)/*$(GCNOEXT)
	@rm -f $(BUILD_DIR)/*$(GCDAEXT)
	@rm -f $(BUILD_DIR)/*.d
